version: '3.3'

networks:
  django-network:
    driver: bridge
volumes:
  pg_data:
  static:
  media:

services:
  db:
    container_name: 'foodgram_db'
    image: postgres:13.10
    env_file: .env
    restart: always
    networks:
      - django-network
    volumes:
      - pg_data:/var/lib/postgresql/data/

  backend:
    image: nikpetrishchev/foodgram_backend
    env_file: .env
    restart: always
    depends_on:
      - db
    networks:
      - django-network
    volumes:
      - static:/backend_static/app/static/
      - media:/app/media/

  frontend:
    image: nikpetrishchev/foodgram_frontend
    restart: always
    depends_on:
      - db
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static/api/result_build/

  nginx:
    image: nikpetrishchev/foodgram_nginx
    restart: always
    env_file: .env
    ports:
      - '8000:80'
    networks:
      - django-network
    volumes:
      - static:/staticfiles/
      - media:/media/
#      - ../docs/:/usr/share/nginx/html/api/docs/
#      - ./nginx_conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
#      - static:/etc/nginx/html/static/
#      - media:/etc/nginx/html/media/
